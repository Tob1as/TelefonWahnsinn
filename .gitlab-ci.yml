image: docker:git 
services:   
  - docker:dind

before_script:
  - export CI_BUILD_DATE=$(date -u +%Y%m%d-%H%M%S)
  - export CI_DOCKER_IMAGE_VERSION=$CI_BUILD_DATE.${CI_COMMIT_SHA:0:8}

variables:
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/

stages:
  - java
  - docker

buildjar:
  image: maven:3-jdk-8
  stage: java
  artifacts:
    paths:
      - target/*.jar
  script:
   - echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                            https://maven.apache.org/xsd/settings-1.0.0.xsd">
                <localRepository>'$PWD'/.m2</localRepository>
          </settings>' > $HOME/.m2/settings.xml
   - mvn clean package
  only:
    - tags
    - schedules

buildDocker:
  stage: docker
  #tags:     
  #  - docker
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_DOCKER_IMAGE_VERSION" -f alpine.armhf.buildwithGitLab.Dockerfile .
    - docker tag "$CI_REGISTRY_IMAGE:$CI_DOCKER_IMAGE_VERSION" "$CI_REGISTRY_IMAGE:latest"
    #- docker push "$CI_REGISTRY_IMAGE:$CI_DOCKER_IMAGE_VERSION"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - tags
    - schedules
