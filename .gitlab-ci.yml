image: docker:git 
services:   
  - docker:dind

variables:
  DOCKER_TLS_CERTDIR: /builds/certs
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version --no-transfer-progress -DinstallAtEnd=true -DdeployAtEnd=true"
  BUILDPLATFORM: "linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6"
  DOCKERFILE_PATH: "alpine.Dockerfile"

before_script:
  - export BUILD_DATE=$(date -u +%Y%m%d-%H%M%S)
  - export DOCKER_IMAGE_VERSION=${BUILD_DATE}.${CI_COMMIT_SHORT_SHA}

cache:
  paths:
    - .m2/repository

stages:
 - java
 - docker

build-jar:
  image: maven:3-openjdk-8
  stage: java
  artifacts:
    paths:
      - target/*.jar
  script:
    - mvn $MAVEN_CLI_OPTS package --file pom.xml -DskipTests
  only:
    refs:
    #  - tags
      - schedules
    #  - master
    #  - main
    #changes:
    #  - .gitlab-ci.yml
    #  - alpine.Dockerfile
    #  - src/*
    #  - pom.xml

build-docker:
  stage: docker
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    # docker buildx, more info: https://github.com/Tob1as/docker-build-example/blob/main/.gitlab-ci.yml
    - docker context create tls-environment
    - docker buildx create --name multiarchbuilder --use tls-environment
    #- docker buildx ls
    - docker buildx build --build-arg BUILD_DATE="${BUILD_DATE}" --build-arg VCS_REF="${CI_COMMIT_SHORT_SHA}" --tag "${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_VERSION}" --tag "${CI_REGISTRY_IMAGE}:latest" --platform "${BUILDPLATFORM}" --file "${DOCKERFILE_PATH}" --push .
    - docker logout "$CI_REGISTRY"
  only:
    refs:
    #  - tags
      - schedules
    #  - master
    #  - main
    #changes:
    #  - .gitlab-ci.yml
    #  - alpine.Dockerfile
    #  - src/*
    #  - pom.xml
